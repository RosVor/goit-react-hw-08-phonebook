{"version":3,"file":"static/js/419.92fcf860.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/pages/Contacts.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../redux/contactsSlice';\nimport { getContacts, getFilter } from '../redux/selectors';\nimport \"./ContactList.css\"\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contact = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = contact.filter(\n    (contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  \n  const handleDeleteContact = (contactId) => {\n    dispatch(deleteContact(contactId));\n  };\n\n\n  return (\n    <ul className='contact-list'>\n      {filteredContacts.map((contact) => (\n        <li className='contact-item' key={contact.id}>\n          {contact.name}: {contact.number}\n          <button className=\"button-delete\" type=\"button\" onClick={() => handleDeleteContact(contact.id)}>\n            Видалити\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../redux/contactsSlice';\nimport { getContacts } from '../redux/selectors';\nimport \"./ContactForm.css\"\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n\n    const existingContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase() || contact.number === number\n    );\n\n    if (existingContact) {\n      alert('Alarm! The same contact!')\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit} className=\"contact-form\">\n      <label className=\"contact-inf\">\n        Name:\n        <input  \n        id=\"contactName\"\n        name=\"contactName\"\n        className=\"contact-input\" \n        type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n      </label>\n      <label className=\"contact-inf\">\n        Number:\n        <input \n        type=\"tel\"\n        id=\"phoneNumber\"\n        name=\"phoneNumber\"\n        className=\"contact-input\" \n        value={number} \n        onChange={(e) => setNumber(e.target.value)} \n        required\n        />\n      </label>\n      <button className=\"button-submit\" type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../redux/contactsSlice';\nimport { getFilter } from 'components/redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilterChange = (event) => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <label className='filter-label'>\n      Фільтрувати контакти:\n      <input\n        className='filter-input'\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n\n\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from '../ContactList/ContactList'; \nimport ContactForm from '../ContactForm/ContactForm'; \nimport Filter from '../Filter/Filter'; \nimport { fetchContacts } from '../redux/contactsSlice'; \nimport { selectLoading } from '../redux/selectors'; \n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm /> \n      <Filter />\n      <div>{isLoading && 'Loading...'}</div>\n      <ContactList /> \n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["dispatch","useDispatch","contact","useSelector","getContacts","filter","getFilter","filteredContacts","name","toLowerCase","includes","_jsx","className","children","map","_jsxs","number","type","onClick","contactId","id","deleteContact","contacts","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","onSubmit","event","preventDefault","find","alert","addContact","value","onChange","e","target","required","setFilter","isLoading","selectLoading","useEffect","fetchContacts","_Fragment","Helmet","ContactForm","Filter","ContactList"],"sourceRoot":""}